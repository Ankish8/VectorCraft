version: '3.8'

services:
  vectorcraft:
    build: .
    container_name: vectorcraft-app
    ports:
      - "8080:8080"
    volumes:
      # Persist database and user uploads
      - vectorcraft_data:/app/data
      - vectorcraft_uploads:/app/uploads
      - vectorcraft_results:/app/results
      - vectorcraft_output:/app/output
    environment:
      - FLASK_ENV=production
      - PYTHONPATH=/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: vectorcraft-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - vectorcraft
    restart: unless-stopped
    profiles:
      - production

volumes:
  vectorcraft_data:
    driver: local
  vectorcraft_uploads:
    driver: local
  vectorcraft_results:
    driver: local
  vectorcraft_output:
    driver: local

networks:
  default:
    driver: bridge